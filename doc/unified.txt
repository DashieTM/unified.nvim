*unified.txt*  Inline unified diffs for Neovim

Author:  Your Name <your-email@example.com>
License: MIT

==============================================================================
CONTENTS                                                 *unified-contents*

    1. Introduction ............................. |unified-introduction|
    2. Requirements ............................ |unified-requirements|
    3. Installation ............................ |unified-installation|
    4. Configuration ........................... |unified-configuration|
    5. Usage ................................... |unified-usage|
    6. Commands ................................ |unified-commands|
    7. API ..................................... |unified-api|
    8. Mappings ................................ |unified-mappings|
    9. Troubleshooting ......................... |unified-troubleshooting|

==============================================================================
1. INTRODUCTION                                         *unified-introduction*

unified.nvim is a plugin for Neovim that displays unified diffs inline in your
buffers. It shows the differences between the current buffer content and a
reference commit (e.g., HEAD).

==============================================================================
2. REQUIREMENTS                                        *unified-requirements*

- Neovim >= 0.5.0
- `diff` command available in your PATH

==============================================================================
3. INSTALLATION                                        *unified-installation*

Using packer.nvim: >
    use {
      'kirillov/unified.nvim',
      config = function()
        require('unified').setup({
          -- Optional configuration
        })
      end
    }
<

Using lazy.nvim: >
    {
      'kirillov/unified.nvim',
      config = function()
        require('unified').setup({
          -- Optional configuration
        })
      end
    }
<

==============================================================================
4. CONFIGURATION                                      *unified-configuration*

Configuration with default values: >
    require('unified').setup({
      signs = {
        add = "│",
        delete = "│",
        change = "│",
      },
      highlights = {
        add = "DiffAdd",
        delete = "DiffDelete",
        change = "DiffChange",
      },
      line_symbols = {
        add = "+",
        delete = "-",
        change = "~",
      },
      auto_refresh = true, -- Whether to automatically refresh diff when buffer changes
    })
<<

==============================================================================
5. USAGE                                                    *unified-usage*

1. Open a file in Neovim
2. Make some changes to the file
3. Run the command `:Unified` to display the diff against HEAD and the file tree.
4. Run `:Unified` again to close the diff view and file tree.
5. Run `:Unified <commit_ref>` to show the diff against a specific commit.

File Tree:
When you run `:Unified` to show a diff, a file tree explorer will also open
in a split window. The file tree shows the structure of the git repository
and indicates which files have changes:

- Files/directories with a "+" sign have additions or modifications
- Files/directories with a "-" sign have deletions

The file tree supports keyboard navigation:
- Press Enter/o to toggle directory expansion or open a file
- Press h/l to collapse/expand directories
- Press j/k to navigate up and down
- Press <C-j>/<C-k> to move up/down 10 lines at a time
- Press - to navigate to parent directory
- Press R to refresh the tree view
- Press q to close the tree view
- Press ? to show help

When you select a file in the tree, it will open in the main editor window,
allowing you to easily navigate between files in your repository.

==============================================================================
6. COMMANDS                                                *unified-commands*

*:Unified* [{commit_ref}]                                       *:Unified*
    The main command for the plugin. Behavior depends on arguments and state:

    *:Unified* (no arguments)
        - If the unified view is **not** currently active: Shows the diff
          between the current buffer and `HEAD`. Opens the file tree showing
          files changed since `HEAD`. Equivalent to `:Unified HEAD`.
        - If the unified view **is** currently active: Closes the view and
          removes highlights.

    *:Unified* {commit_ref}
        Shows the diff between the current buffer and the specified git
        reference ({commit_ref}). Opens the file tree showing files changed
        since {commit_ref}. {commit_ref} can be a commit hash, branch name,
        tag, etc. Autocompletion is provided for {commit_ref}.
        The specified {commit_ref} is stored and used for subsequent refreshes
        until a new reference is provided or the view is closed.

   *:Unified reset*                                     *:Unified-reset*
       Removes all unified diff highlights and signs from the current buffer
       and closes the unified file tree window if it is open.

==============================================================================
7. API                                                        *unified-api*

*require('unified').show_diff([commit])*
    Function to show differences between buffer and git HEAD, or a specific commit
    if the optional [commit] parameter is provided. If a commit is specified, it is
    stored as the window-local base reference for subsequent refreshes.

*require('unified').show_git_diff_against_commit(commit)*
    Function to show differences between buffer and a specific git commit.
    The commit parameter must be provided and can be a commit hash, branch name,
    tag, or any git reference.

*require('unified').is_diff_displayed()*
    Function to check if diff is currently displayed in a buffer.

*require('unified').setup_auto_refresh()*
    Function to set up automatic refresh of diff display on buffer changes.

*require('unified').show_file_tree()*
    Function to display the file tree explorer for the current buffer.
    The tree shows the structure of the git repository with indicators for
    files that have changes.

*require('unified').get_main_window()*
    Function to get the main content window (used for navigating from the
    file tree back to the content window).

*require('unified').get_window_commit_base()*
    Function to get the current window's stored commit base for diffing.
    Returns the commit reference string or defaults to "HEAD" if not set.

*require('unified').set_window_commit_base(commit)*
    Function to set the commit base for the current window.
    This is useful when you want to programmatically set the commit base
    without immediately showing the diff.

*require('unified').setup(opts)*
    Function to configure the plugin with optional settings.

==============================================================================
8. MAPPINGS                                                *unified-mappings*

The plugin does not define any mappings by default. You can create your own: >
    vim.keymap.set('n', '<leader>ud', ':Unified<CR>',
                  { silent = true, desc = "Unified: Toggle view / Show HEAD diff" })
    -- Example for showing diff against a specific branch (e.g., main)
    vim.keymap.set('n', '<leader>um', ':Unified main<CR>',
                  { silent = true, desc = "Unified: Show diff against main" })
<<

==============================================================================
9. TROUBLESHOOTING                                  *unified-troubleshooting*

- If no diff is shown, check that:
  - Your buffer has a file name (saved at least once)
  - You have made changes to the buffer compared to the saved file
  - The `diff` command is available in your PATH

- If sign column markers are not showing:
  - Make sure your 'signcolumn' option is set to 'yes' or 'auto'

 vim:tw=78:ts=8:ft=help:norl:
